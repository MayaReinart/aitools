name: Release

on:
  release:
    types: [published]
  workflow_dispatch: # Allow manual triggers

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install Poetry
        env:
          POETRY_VERSION: 1.7.1
        run: |
          curl -sSL https://install.python-poetry.org | POETRY_VERSION=$POETRY_VERSION python3 -
          poetry config virtualenvs.create false

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}/api
            ghcr.io/${{ github.repository }}/worker
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix=

      - name: Build and push API image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          target: api

      - name: Build and push Worker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          target: worker

      - name: Test deployment
        run: |
          # Pull the images we just pushed
          docker-compose pull

          # Start services
          docker-compose up -d

          # Wait for services to be ready
          sleep 10

          # Basic health check
          curl -f http://localhost:8080/api/health || {
            echo "Health check failed. Showing logs:"
            docker-compose logs
            exit 1
          }

          # Cleanup
          docker-compose down
