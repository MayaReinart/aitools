name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:latest
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          ALLOW_EMPTY_PASSWORD: "yes"

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install Poetry
        env:
          POETRY_VERSION: 1.7.1
        run: |
          curl -sSL https://install.python-poetry.org | POETRY_VERSION=$POETRY_VERSION python3 -
          poetry config virtualenvs.create false

      - name: Install dependencies
        run: |
          poetry install --no-interaction --with dev

      - name: Set up environment variables
        run: |
          echo "ENV=test" >> .env
          echo "LOG_LEVEL=DEBUG" >> .env
          echo "REDIS_URL=redis://localhost:6379/0" >> .env
          echo "OPENAI_API_KEY=sk-mock-key-for-testing" >> .env
          echo "JOB_DATA_DIR=/tmp/api_test_results" >> .env

      - name: Set up test directories
        run: |
          mkdir -p /tmp/api_test_results
          chmod -R 755 /tmp/api_test_results

      - name: Install Redis CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y redis-tools

      - name: Verify Redis connection
        run: |
          redis-cli ping || (echo "Redis connection failed" && exit 1)

      - name: Run pre-commit hooks
        run: |
          poetry run pre-commit run --all-files

      - name: Run tests with coverage
        run: |
          poetry run pytest tests/ -v --cov=src --cov-report=term-missing --cov-fail-under=80

  docker:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Compose
        uses: docker/setup-buildx-action@v3

      - name: Start services
        run: |
          # Start services
          docker compose up -d

          # Wait for services to be ready
          sleep 10

          # Check if services are running
          docker compose ps

          # Test API health endpoint
          curl -f http://localhost:8080/api/health || {
            echo "Health check failed. Showing logs:"
            docker compose logs
            exit 1
          }

          # Cleanup
          docker compose down
